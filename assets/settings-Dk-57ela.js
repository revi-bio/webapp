import{O as p,u as f,r as l,A as t}from"./index-DCXiRpB3.js";const w=f(),m=p("settings",()=>{const s=l({displayName:"",newEmail:"",currentPasswordForEmail:"",newPassword:"",currentPasswordForPassword:"",pronounce:"",adultContent:!1}),a=l({displayName:!1,email:!1,password:!1,preferences:!1}),o=l(!1);async function u(){try{o.value=!0,console.log("Loading settings...");const e=await t.get("setting",{});console.log("API response:",e.data),e&&e.data&&(e.data["preferences.pronouns"]?s.value.pronounce=e.data["preferences.pronouns"]:e.data.pronouns&&(s.value.pronounce=e.data.pronouns),typeof e.data["preferences.autoAcceptAdultContent"]=="boolean"&&(s.value.adultContent=e.data["preferences.autoAcceptAdultContent"]),console.log("Settings loaded successfully:",s.value))}catch(e){console.error("Error while loading settings:",e)}finally{o.value=!1}}function c(e,r){if(r==null)return;if((n=>typeof n=="object"&&n!==null&&"isTrusted"in n)(r))if(console.error(`Received event object for ${e} instead of a value:`,r),e==="adultContent"&&"target"in r&&r.target&&"checked"in r.target)r=r.target.checked;else return;s.value[e]!==r&&(s.value[e]=r,e==="displayName"&&(a.value.displayName=!0),(e==="newEmail"||e==="currentPasswordForEmail")&&(a.value.email=!0),(e==="newPassword"||e==="currentPasswordForPassword")&&(a.value.password=!0),(e==="pronounce"||e==="adultContent")&&(a.value.preferences=!0),console.log(`Updated ${e}:`,r,"isDirty:",a.value))}async function d(){console.log("Saving settings...");try{if(a.value.displayName&&s.value.displayName&&(await t.patch("user/displayname",{displayName:s.value.displayName}),await w.refreshUserData()),a.value.email&&s.value.newEmail&&s.value.currentPasswordForEmail&&await t.patch("user/email",{email:s.value.newEmail,currentPassword:s.value.currentPasswordForEmail}),a.value.password&&s.value.newPassword&&s.value.currentPasswordForPassword&&await t.patch("user/password",{password:s.value.newPassword,currentPassword:s.value.currentPasswordForPassword}),a.value.preferences){const e={"preferences.pronouns":s.value.pronounce,"preferences.autoAcceptAdultContent":s.value.adultContent};console.log("Saving preferences:",e);try{await t.post("setting",e),console.log("Preferences saved successfully with dotted notation")}catch(r){console.error("Error saving with dotted notation, trying without dots:",r)}}i(),console.log("All settings saved successfully")}catch(e){throw console.error("Error saving settings:",e),e}}function i(){a.value={displayName:!1,email:!1,password:!1,preferences:!1}}return{draft:s,isDirty:a,isLoading:o,updateDraft:c,saveSettings:d,resetDirty:i,loadSettings:u}});export{m as u};
